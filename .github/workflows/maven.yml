name: CICD pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  compile:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn compile
  
  security-check:
    runs-on: self-hosted
    needs: compile
    steps:
      - uses: actions/checkout@v4
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy
      - name: Trivy FS scan
        run: trivy fs --format table -o fs-report.json .
      - name: Install gitleaks
        run: sudo apt-get install -y gitleaks
      - name: Gitleaks code scan
        run: gitleaks detect -s . -r gitleaks-reports.json -f json

  test:
    runs-on: self-hosted
    needs: security-check
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Unit tests
        run: mvn test
      
  build_and_sonar:
    runs-on: self-hosted
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0   # needed for SonarQube reporting
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build project
        run: mvn package

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
           name: app-jar
           path: target/*.jar

      - name: Install unzip (for SonarQube scanner)
        run: sudo apt-get update && sudo apt-get install -y unzip
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          
  build_docker_image_and_push:
    runs-on: self-hosted
    needs: build_and_sonar
    steps:
      - uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app-jar
          path: app  # jar will be available in ./app/

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
           context: . 
           push: true
           tags: nikhil5194/bankapp:latest

        

